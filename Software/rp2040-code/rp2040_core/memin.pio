;
; NOTE: Timing assumes 4Mhz 6502 and 250Mhz state machine
;       6502 clk 250ns; RP2040 clk 4ns; Prop+Level-shift Delay ~40ns
;
.program memin
;.wrap_target
    ;mov isr, null
    wait 1 gpio 26  ; Wait for data ready
    in pins 8       ; read latched data
    wait 0 gpio 26
    irq wait 0
;.wrap


% c-sdk {
static inline void memin_program_init(PIO pio, uint sm, uint offset, uint pin) {
    // Runs at FULL clock speed, so the above delays need to consider that!
    pio_sm_config c = memin_program_get_default_config(offset);
    sm_config_set_set_pins(&c, pin, 8);
    sm_config_set_in_pins(&c, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 8, false);
   // pio_sm_set_consecutive_pindirs(pio, sm, 26, 1, false);
    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin+1);
    pio_gpio_init(pio, pin+2);
    pio_gpio_init(pio, pin+3);
    pio_gpio_init(pio, pin+4);
    pio_gpio_init(pio, pin+5);
    pio_gpio_init(pio, pin+6);
    pio_gpio_init(pio, pin+7);
    //pio_gpio_init(pio, 26);
    //gpio_pull_up(pin);
    //gpio_pull_up(pin+1);
    //gpio_pull_up(pin+2);
    //gpio_pull_up(pin+3);
    //gpio_pull_up(pin+4);
    //gpio_pull_up(pin+5);
    //gpio_pull_up(pin+6);
    //gpio_pull_up(pin+7);
    sm_config_set_in_shift(&c, true, true, 8);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    pio_sm_init(pio, sm, offset, &c);
}
%}
