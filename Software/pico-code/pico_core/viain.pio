;
.program viain
;.wrap_target
    wait 1 gpio 26   ; Wait for data ready
    in pins 8
    irq  wait 1
;.wrap


% c-sdk {
static inline void viain_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = viain_program_get_default_config(offset);
    sm_config_set_set_pins(&c, pin, 8);
    sm_config_set_in_pins(&c, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 8, false);
    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin+1);
    pio_gpio_init(pio, pin+2);
    pio_gpio_init(pio, pin+3);
    pio_gpio_init(pio, pin+4);
    pio_gpio_init(pio, pin+5);
    pio_gpio_init(pio, pin+6);
    pio_gpio_init(pio, pin+7);
    gpio_pull_up(pin);
    gpio_pull_up(pin+1);
    gpio_pull_up(pin+2);
    gpio_pull_up(pin+3);
    gpio_pull_up(pin+4);
    gpio_pull_up(pin+5);
    gpio_pull_up(pin+6);
    gpio_pull_up(pin+7);
    sm_config_set_in_shift(&c, true, true, 8);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    pio_sm_init(pio, sm, offset, &c);
}
%}
;
.program ps2
;.wrap_target
    wait 0 pin 1     ; skip start bit
    wait 1 pin 1

    set x, 7         ; PS2 data is 8 bits
    mov isr, null
loop:
    wait 0 pin 1 [1] ; wait negative clock edge
    in pins, 1       ; get bit
    wait 1 pin 1     ; wait for positive edge
    jmp x-- loop     ; wait for all 8 bits

    wait 0 pin 1     ; skip parity and stop bits
    wait 1 pin 1
    wait 0 pin 1
    wait 1 pin 1
    irq  wait 0
;.wrap


% c-sdk {
static inline void ps2_program_init(PIO pio, uint sm, uint offset, uint pin, float freq) {
    pio_sm_config c = ps2_program_get_default_config(offset);
    sm_config_set_set_pins(&c, pin, 2);
    sm_config_set_in_pins(&c, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 2, false);
    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin+1);
    gpio_pull_up(pin);
    gpio_pull_up(pin + 1);
    sm_config_set_in_shift(&c, true, true, 8);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    float div = clock_get_hz(clk_sys) / freq;
    sm_config_set_clkdiv(&c, div);
    // sm_config_set_clkdiv(&c, 427);
    pio_sm_init(pio, sm, offset, &c);
    // pio_sm_set_enabled(pio, sm, true);
}
%}
